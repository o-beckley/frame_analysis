syntax = "proto3";

message AnalysisLog{
  repeated string messages = 1;
}

message RollerSupport{
  float v_reaction = 1;
  float settlement = 2;
}

message HingeSupport{
  float v_reaction = 1;
  float h_reaction = 2;
  float settlement = 3;
}

message FixedSupport{
  float v_reaction = 1;
  float h_reaction = 2;
  float m_reaction = 3;
  float settlement = 4;
}

message Support{
  enum Type{
    UNKNOWN = 0;
    ROLLER = 1;
    HINGE = 2;
    FIXED = 3;
  }
  Type type = 1;
  float position_x = 2;
  float position_y = 3;
  oneof support{
    RollerSupport roller = 4;
    HingeSupport hinge = 5;
    FixedSupport fixed = 6;
  }
}

message HingedJoint{}

message FixedJoint{}

message Joint{
  enum Type{
    UNKNOWN = 0;
    HINGED = 1;
    FIXED = 2;
  }
  Type type = 1;
  float position_x = 2;
  float position_y = 3;
  oneof joint{
    HingedJoint hinged = 4;
    FixedJoint fixed = 5;
  }
}

message Node{
  enum Type{
    UNKNOWN = 0;
    SUPPORT = 1;
    JOINT = 2;
  }
  Type type = 1;
  oneof node{
    Support support = 2;
    Joint joint = 3;
  }
}

message PointLoad{
  float x_value = 1;
  float y_value = 2;
  float point_of_application = 3;
}

message Couple{
  float value = 1;
  float point_of_application = 2;
}

message UniformlyDistributedLoad{
  float value = 1;
  float starting_point = 2;
  float length = 3;
}

message VerticallyDistributedLoad{
  enum Orientation{
    UNKNOWN = 0;
    LEFT = 1;
    RIGHT = 2;
  }
  Orientation orientation = 1;
  float vertex = 2;
  float starting_point = 3;
  float length = 4;
}

message Load{
  enum Type{
    UNKNOWN = 0;
    COUPLE = 1;
    POINT = 2;
    UNIFORMLY_DISTRIBUTED = 3;
    VERTICALLY_DISTRIBUTED = 4;
  }
  Type type = 1;
  oneof load{
    PointLoad point_load = 2;
    Couple couple = 3;
    UniformlyDistributedLoad uniformly_distributed_load = 4;
    VerticallyDistributedLoad vertically_distributed_load = 5;
  }
}

message Member{
  float length = 1;
  optional float elastic_modulus = 2;
  optional float moment_of_inertia = 3;
  float position_x = 4;
  float position_y = 5;
  repeated Load loadings = 6;
}

message BeamComponent{
  enum Type{
    UNKNOWN = 0;
    MEMBER = 1;
    SUPPORT = 2;
  }
  Type type = 1;
  oneof component{
    Member member = 2;
    Support support = 3;
  }
}

message Component{
  enum Type{
    UNKNOWN = 0;
    MEMBER = 1;
    NODE = 2;
  }
  Type type = 1;
  oneof component{
    Node node = 2;
    Member member = 3;
  }
}

message Beam{
  repeated BeamComponent components = 1;
  AnalysisLog log = 2;
}

service FrameAnalysis{
  rpc AnalyzeBeam (Beam) returns (Beam);
}
